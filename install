#!/usr/bin/env zsh

set -euo pipefail

readonly CONFIG_FOLDER="${HOME}/.config"
readonly DOTFILES="${CONFIG_FOLDER}/dotfiles"
readonly DOTFILES_GIT="https://github.com/maddenvvs/.dotfiles.git"
readonly INSTALL_FOLDERS=(\
  "kitty" \
  "vim" \
  "zsh" \
)

function _install_folder() {
  local folder_name="${1}"
  local source_folder="${DOTFILES}/${folder_name}"
  local target_folder="${CONFIG_FOLDER}/${folder_name}"

  mkdir -p "${target_folder}"

  for file in "${source_folder}"/*(DN); do
    ln -fs "${file}" "${target_folder}"/$(basename "${file}")
  done
}

# Clone dotfiles repo to a predefined folder if they don't exist.
if [[ ! -d "${DOTFILES}" ]] ; then
  git clone "${DOTFILES_GIT}" "${DOTFILES}"

  # Switch current working directory to dotfiles directory because
  # installing submodules requires to be invoked from within the dotfiles folder.
  pushd "${DOTFILES}"

  # Pull all registered git submodules.
  git submodule update --init --recursive

  popd
fi

for folder in "${INSTALL_FOLDERS[@]}"; do
  _install_folder "${folder}"
done

# Make a symlink for .zshenv file to $HOME folder because initially this is
# where zsh starts to look for user-specific configuration.
ln -fs "${CONFIG_FOLDER}/zsh/.zshenv" "${HOME}/.zshenv"

# Make a symlink for .vim folder to properly initialize Vim.
ln -fs "${CONFIG_FOLDER}/vim" "${HOME}/.vim"

