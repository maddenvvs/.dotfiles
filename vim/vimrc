" Vim config file
"
" Reload vimrc:
"   :so %
"   :so $MYVIMRC

" Load vim defaults.
" :h skip_defaults_vim
unlet! skip_defaults_vim
source $VIMRUNTIME/defaults.vim

" Set leader key. Default is '\'.
let mapleader=" "

" Automatically bootstrap vim-plug plugins.
if empty(globpath(&runtimepath, 'plugged'))
  autocmd VimEnter * PlugInstall --sync | source $MYVIMRC | q
endif

" Define external plugins with vim-plug.
call plug#begin('~/.vim/plugged')

" Better defaults.
Plug 'tpope/vim-sensible'

" Simplify commenting out things.
Plug 'tpope/vim-commentary'

" Custom theme.
Plug 'morhetz/gruvbox'

" Status bar plugin.
Plug 'vim-airline/vim-airline'

" Fuzzy search (fzf) plugin.
Plug 'junegunn/fzf'

call plug#end()

" Disable error bell sound.
set belloff=all

" Add vertcat line denoting 80 symbols border.
set colorcolumn=80

" Disable horizontal cursor line as it is very slow over ssh.
" https://stackoverflow.com/q/307148/1745064
set nocursorline

" Enable line numbers.
set number relativenumber

" Smart autoindent when starting a new line.
set smartindent

" Disable backups and swapfile, use persistent undo instead.
set noswapfile nowritebackup

" Enable persistent undo.
if has('persistent_undo')
  set undofile undodir=~/.cache/vim/undo
  call mkdir(&undodir, "p", 0700)
endif

" Shorter update time than the 4000ms default, for async vim operations.
set updatetime=2000

" Disable --INSERT-- which is not necessary, because vim-airline already
" displays it.
set noshowmode

" Better splits.
set splitbelow splitright

" Enable custom theme.
" Vim always reads .vimrc file first and after that starts to load plugins. We
" use autocmd VimEnter to make sure that all plugins are loaded completely and
" then use gruvbox. ++nested is used to allow automatic filetype detection.
autocmd VimEnter * ++nested call ConfigureGruvboxTheme()

function ConfigureGruvboxTheme()
  " Enable True Color support.
  set termguicolors

  " Use dark theme.
  set background=dark

  " Configure theme contrast.
  let g:gruvbox_contrast_dark = 'medium'

  " Enforce italic usage on terminals.
  let g:gruvbox_italic = 1

  colorscheme gruvbox
endfunction

" Automatically populate the g:airline_symbols dictionary with the powerline
" symbols.
let g:airline_powerline_fonts = 1

" Automatically displays all buffers when there's only one tab open.
let g:airline#extensions#tabline#enabled = 1

" Vim uses background color erase when Vim theme declares background color.
" Kitty terminal emulator doesn't support background color erase which leads
" to incorrect displaying of background color when scrolling. The following
" line effectively fixes the issue. For more information please see:
" https://sw.kovidgoyal.net/kitty/faq/#using-a-color-theme-with-a-background-color-does-not-work-well-in-vim
let &t_ut=''

" Make Y behave like C and D (do operation from the cursor to the end of line).
nnoremap Y y$

" Save a buffer both in NORMAL in INSERT modes.
inoremap <C-s>     <C-O>:update<cr>
nnoremap <C-s>     :update<cr>

" Comment/uncomment with tpope/commentaty.
noremap <leader>/ :Commentary<cr>

filetype plugin indent on
syntax on

